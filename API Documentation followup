API Documentation followup

Recap:

What makes good API documentation:

1. Be there
2. Hand written
3. Written by Engineer
4. Written before coding
5. Easy to write
6. Easy to read
7. Consistent
8. Accurate
9. Stay accurate

Good things to have:
1. easy to write
2. conistent
3. mock server
4. code snippets (curl, ruby, scala, ...)
5. testable

API blueprint:
1. Simple and concise syntax to document API
2. Hosting services vs. self hosting
3. can be tested by tools like `dredd` (test API documentation against staging API endpoint)

Possible tools:
1. Api blueprint + Apiary
2. Swagger
3. Postman
4. Slate (https://github.com/lord/slate)

Possible move-foreward approach:
0. presentation for key stake holders
0a. recap in confluence page
0b. document one or two endpoints with blueprint, host locally and in apiary
0c. presentation (payam, eugene, arkadiy, james, leo, jeremy)
0d. collect feedbacks

1. Identify a tool
2. Identify a hosting approach
3. Document and host a small set of APIs in Projects and in Bigfoot
4. collect feedbacks
5. establish a process to document new APIs using this approach

Reference:

http://drjamesneiman.com/dp_overview/index.html#42
https://apievangelist.com/2016/09/16/a-look-at-the-state-of-api-documentation-solutions/
